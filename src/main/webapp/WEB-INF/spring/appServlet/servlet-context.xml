<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- @컨트롤러와같은 어노테이션 모델을 쓰기위해서는 아래 태그를 써야한다. -->
	<annotation-driven />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- resources mapping="/resources/**" location="/resources/" /-->
	<!-- webapp아래 아무곳이나 폴더를 만들어서 리소스를 두도록 설정 -->
	<default-servlet-handler/>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean p:order="3" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 아래의 component-scan 태그를 사용하지않으면 사용할 모든 빈을 일일이 등록해줘야한다. -->
	<context:component-scan base-package="com.kosmo.nmno" />

	<!-- 유효성 검증을 위한 스프링에서 제공하는 빈 등록(에러메세지 출력 목적) -->
	<!-- id값은 내부적으로 프레임워크가 messageSource라는 값으로 사용함으로, 반드시 id에 messageSource값으로 
		설정 -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource"/>

	<!-- Jackson의 com.fasterxml.jackson.databind.ObjectMapper 등록한다.
		(DTO 또는 Map ↔ JSON 으로 변환하기위한 API) -->
	<beans:bean class="com.fasterxml.jackson.databind.ObjectMapper"/>
	
	<!-- 파일 업로드를 위한 API 등록. -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="5242880"/>
	</beans:bean>
	
</beans:beans>
